/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author DJ
 */
public class PaperShopGUI extends javax.swing.JFrame {

    /**
     * Creates new form PaperShopGUI
     */
    public PaperShopGUI() {
        initComponents();
        initDisplay();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        addJobFrame = new javax.swing.JFrame();
        colorLabel = new javax.swing.JLabel();
        typeLabel = new javax.swing.JLabel();
        sizeLabel = new javax.swing.JLabel();
        nameLabel = new javax.swing.JLabel();
        numberPagesLabel = new javax.swing.JLabel();
        numberCopiesLabel = new javax.swing.JLabel();
        bindingLabel = new javax.swing.JLabel();
        backButtonAJ = new javax.swing.JButton();
        addJobButton = new javax.swing.JButton();
        addJobOKButton = new javax.swing.JButton();
        addJobVerifyLabel = new javax.swing.JTextField();
        colorField = new javax.swing.JTextField();
        typeField = new javax.swing.JTextField();
        sizeField = new javax.swing.JTextField();
        nameField = new javax.swing.JTextField();
        numberPagesField = new javax.swing.JTextField();
        numberCopiesField = new javax.swing.JTextField();
        bindingField = new javax.swing.JTextField();
        invalidColorLabel = new javax.swing.JLabel();
        invalidTypeLabel = new javax.swing.JLabel();
        invalidSizeLabel = new javax.swing.JLabel();
        invalidNumberPagesLabel = new javax.swing.JLabel();
        invalidNumberCopiesLabel = new javax.swing.JLabel();
        invalidBindingLabel = new javax.swing.JLabel();
        closeJobFrame = new javax.swing.JFrame();
        nameCJLabel = new javax.swing.JLabel();
        nameCJField = new javax.swing.JTextField();
        closeJobButton = new javax.swing.JButton();
        backButtonCJ = new javax.swing.JButton();
        closeJobOKButton = new javax.swing.JButton();
        closeJobVerifyLabel = new javax.swing.JTextField();
        jobListFrame = new javax.swing.JFrame();
        jobListTopLabel = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jobListArea = new javax.swing.JTextArea();
        jobListOKButton = new javax.swing.JButton();
        changeBindingFrame = new javax.swing.JFrame();
        nameCBLabel = new javax.swing.JLabel();
        nameCBField = new javax.swing.JTextField();
        bindingChangesLabel = new javax.swing.JLabel();
        bindingChangesField = new javax.swing.JTextField();
        backButtonCB = new javax.swing.JButton();
        changeBindingButton = new javax.swing.JButton();
        changeBindingVerifyLabel = new javax.swing.JTextField();
        changeBindingOKButton = new javax.swing.JButton();
        invalidBindingCBLabel = new javax.swing.JLabel();
        observeIncomeFrame = new javax.swing.JFrame();
        observeIncomeTopLabel = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        overallIncomeArea = new javax.swing.JTextArea();
        observeIncomeOKButton = new javax.swing.JButton();
        RBGroup = new javax.swing.ButtonGroup();
        welcomeLabel = new javax.swing.JLabel();
        addJobRB = new javax.swing.JRadioButton();
        closeJobRB = new javax.swing.JRadioButton();
        jobListRB = new javax.swing.JRadioButton();
        changeBindingRB = new javax.swing.JRadioButton();
        observeIncomeRB = new javax.swing.JRadioButton();
        nextButton = new javax.swing.JButton();
        makeSelectLabel = new javax.swing.JLabel();

        addJobFrame.setMinimumSize(new java.awt.Dimension(500, 600));
        addJobFrame.getContentPane().setLayout(null);

        colorLabel.setText("Color");
        addJobFrame.getContentPane().add(colorLabel);
        colorLabel.setBounds(30, 20, 50, 20);

        typeLabel.setText("Type");
        addJobFrame.getContentPane().add(typeLabel);
        typeLabel.setBounds(30, 50, 50, 20);

        sizeLabel.setText("Size");
        addJobFrame.getContentPane().add(sizeLabel);
        sizeLabel.setBounds(30, 80, 50, 20);

        nameLabel.setText("Name");
        addJobFrame.getContentPane().add(nameLabel);
        nameLabel.setBounds(30, 110, 50, 20);

        numberPagesLabel.setText("Number of Pages");
        addJobFrame.getContentPane().add(numberPagesLabel);
        numberPagesLabel.setBounds(10, 140, 110, 20);

        numberCopiesLabel.setText("Number of Copies");
        addJobFrame.getContentPane().add(numberCopiesLabel);
        numberCopiesLabel.setBounds(10, 170, 110, 20);

        bindingLabel.setText("Binding");
        addJobFrame.getContentPane().add(bindingLabel);
        bindingLabel.setBounds(30, 200, 50, 20);

        backButtonAJ.setText("Back");
        backButtonAJ.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backButtonAJActionPerformed(evt);
            }
        });
        addJobFrame.getContentPane().add(backButtonAJ);
        backButtonAJ.setBounds(60, 260, 55, 23);

        addJobButton.setText("Add Job");
        addJobButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addJobButtonActionPerformed(evt);
            }
        });
        addJobFrame.getContentPane().add(addJobButton);
        addJobButton.setBounds(250, 260, 110, 23);

        addJobOKButton.setText("OK");
        addJobOKButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addJobOKButtonActionPerformed(evt);
            }
        });
        addJobFrame.getContentPane().add(addJobOKButton);
        addJobOKButton.setBounds(160, 340, 47, 23);
        addJobFrame.getContentPane().add(addJobVerifyLabel);
        addJobVerifyLabel.setBounds(90, 290, 220, 40);
        addJobFrame.getContentPane().add(colorField);
        colorField.setBounds(120, 20, 160, 30);
        addJobFrame.getContentPane().add(typeField);
        typeField.setBounds(120, 50, 160, 30);
        addJobFrame.getContentPane().add(sizeField);
        sizeField.setBounds(120, 80, 160, 30);
        addJobFrame.getContentPane().add(nameField);
        nameField.setBounds(120, 110, 160, 30);
        addJobFrame.getContentPane().add(numberPagesField);
        numberPagesField.setBounds(120, 140, 160, 30);
        addJobFrame.getContentPane().add(numberCopiesField);
        numberCopiesField.setBounds(120, 170, 160, 30);
        addJobFrame.getContentPane().add(bindingField);
        bindingField.setBounds(120, 200, 160, 30);

        invalidColorLabel.setText("Invalid Color");
        addJobFrame.getContentPane().add(invalidColorLabel);
        invalidColorLabel.setBounds(320, 20, 120, 20);

        invalidTypeLabel.setText("Invalid Type");
        addJobFrame.getContentPane().add(invalidTypeLabel);
        invalidTypeLabel.setBounds(320, 50, 90, 20);

        invalidSizeLabel.setText("Invalid Size");
        addJobFrame.getContentPane().add(invalidSizeLabel);
        invalidSizeLabel.setBounds(320, 80, 80, 20);

        invalidNumberPagesLabel.setText("Invalid Number of Pages");
        addJobFrame.getContentPane().add(invalidNumberPagesLabel);
        invalidNumberPagesLabel.setBounds(320, 140, 150, 20);

        invalidNumberCopiesLabel.setText("Invalid Number of Copies");
        addJobFrame.getContentPane().add(invalidNumberCopiesLabel);
        invalidNumberCopiesLabel.setBounds(320, 170, 150, 20);

        invalidBindingLabel.setText("Invalid Binding");
        addJobFrame.getContentPane().add(invalidBindingLabel);
        invalidBindingLabel.setBounds(320, 200, 120, 20);

        closeJobFrame.setMinimumSize(new java.awt.Dimension(500, 600));
        closeJobFrame.getContentPane().setLayout(null);

        nameCJLabel.setText("Name");
        closeJobFrame.getContentPane().add(nameCJLabel);
        nameCJLabel.setBounds(80, 20, 70, 20);
        closeJobFrame.getContentPane().add(nameCJField);
        nameCJField.setBounds(200, 20, 90, 30);

        closeJobButton.setText("Close Job");
        closeJobButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                closeJobButtonActionPerformed(evt);
            }
        });
        closeJobFrame.getContentPane().add(closeJobButton);
        closeJobButton.setBounds(210, 80, 110, 23);

        backButtonCJ.setText("Back");
        backButtonCJ.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backButtonCJActionPerformed(evt);
            }
        });
        closeJobFrame.getContentPane().add(backButtonCJ);
        backButtonCJ.setBounds(60, 80, 55, 23);

        closeJobOKButton.setText("OK");
        closeJobOKButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                closeJobOKButtonActionPerformed(evt);
            }
        });
        closeJobFrame.getContentPane().add(closeJobOKButton);
        closeJobOKButton.setBounds(140, 210, 47, 23);
        closeJobFrame.getContentPane().add(closeJobVerifyLabel);
        closeJobVerifyLabel.setBounds(90, 130, 190, 50);

        jobListFrame.setMinimumSize(new java.awt.Dimension(500, 600));
        jobListFrame.getContentPane().setLayout(null);

        jobListTopLabel.setText("Jobs currently open:");
        jobListFrame.getContentPane().add(jobListTopLabel);
        jobListTopLabel.setBounds(140, 30, 130, 20);

        jobListArea.setColumns(20);
        jobListArea.setRows(5);
        jScrollPane1.setViewportView(jobListArea);

        jobListFrame.getContentPane().add(jScrollPane1);
        jScrollPane1.setBounds(86, 80, 220, 100);

        jobListOKButton.setText("OK");
        jobListOKButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jobListOKButtonActionPerformed(evt);
            }
        });
        jobListFrame.getContentPane().add(jobListOKButton);
        jobListOKButton.setBounds(150, 230, 47, 23);

        changeBindingFrame.setMinimumSize(new java.awt.Dimension(500, 600));
        changeBindingFrame.getContentPane().setLayout(null);

        nameCBLabel.setText("Name");
        changeBindingFrame.getContentPane().add(nameCBLabel);
        nameCBLabel.setBounds(100, 20, 60, 20);
        changeBindingFrame.getContentPane().add(nameCBField);
        nameCBField.setBounds(190, 20, 110, 30);

        bindingChangesLabel.setText("Binding Change");
        changeBindingFrame.getContentPane().add(bindingChangesLabel);
        bindingChangesLabel.setBounds(100, 60, 90, 20);
        changeBindingFrame.getContentPane().add(bindingChangesField);
        bindingChangesField.setBounds(190, 60, 110, 30);

        backButtonCB.setText("Back");
        backButtonCB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backButtonCBActionPerformed(evt);
            }
        });
        changeBindingFrame.getContentPane().add(backButtonCB);
        backButtonCB.setBounds(70, 130, 55, 23);

        changeBindingButton.setText("Change Binding");
        changeBindingButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                changeBindingButtonActionPerformed(evt);
            }
        });
        changeBindingFrame.getContentPane().add(changeBindingButton);
        changeBindingButton.setBounds(240, 130, 140, 23);
        changeBindingFrame.getContentPane().add(changeBindingVerifyLabel);
        changeBindingVerifyLabel.setBounds(80, 180, 220, 40);

        changeBindingOKButton.setText("OK");
        changeBindingOKButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                changeBindingOKButtonActionPerformed(evt);
            }
        });
        changeBindingFrame.getContentPane().add(changeBindingOKButton);
        changeBindingOKButton.setBounds(150, 250, 47, 23);

        invalidBindingCBLabel.setText("Invalid binding");
        changeBindingFrame.getContentPane().add(invalidBindingCBLabel);
        invalidBindingCBLabel.setBounds(320, 60, 110, 20);

        observeIncomeFrame.setMinimumSize(new java.awt.Dimension(500, 600));
        observeIncomeFrame.getContentPane().setLayout(null);

        observeIncomeTopLabel.setText("Ovarall Income for Paper Shop");
        observeIncomeFrame.getContentPane().add(observeIncomeTopLabel);
        observeIncomeTopLabel.setBounds(120, 20, 220, 40);

        overallIncomeArea.setColumns(20);
        overallIncomeArea.setRows(5);
        jScrollPane2.setViewportView(overallIncomeArea);

        observeIncomeFrame.getContentPane().add(jScrollPane2);
        jScrollPane2.setBounds(96, 70, 210, 110);

        observeIncomeOKButton.setText("OK");
        observeIncomeOKButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                observeIncomeOKButtonActionPerformed(evt);
            }
        });
        observeIncomeFrame.getContentPane().add(observeIncomeOKButton);
        observeIncomeOKButton.setBounds(170, 230, 47, 23);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMinimumSize(new java.awt.Dimension(500, 600));
        getContentPane().setLayout(null);

        welcomeLabel.setText("Welcome to the Paper Shop");
        getContentPane().add(welcomeLabel);
        welcomeLabel.setBounds(130, 10, 200, 40);

        RBGroup.add(addJobRB);
        addJobRB.setText("Add Job");
        getContentPane().add(addJobRB);
        addJobRB.setBounds(140, 60, 140, 23);

        RBGroup.add(closeJobRB);
        closeJobRB.setText("Close Job");
        getContentPane().add(closeJobRB);
        closeJobRB.setBounds(140, 100, 110, 23);

        RBGroup.add(jobListRB);
        jobListRB.setText("Display Job List");
        getContentPane().add(jobListRB);
        jobListRB.setBounds(140, 140, 160, 23);

        RBGroup.add(changeBindingRB);
        changeBindingRB.setText("Change Binding");
        getContentPane().add(changeBindingRB);
        changeBindingRB.setBounds(140, 180, 160, 23);

        RBGroup.add(observeIncomeRB);
        observeIncomeRB.setText("Observe Income");
        getContentPane().add(observeIncomeRB);
        observeIncomeRB.setBounds(140, 220, 180, 23);

        nextButton.setText("Next");
        nextButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nextButtonActionPerformed(evt);
            }
        });
        getContentPane().add(nextButton);
        nextButton.setBounds(150, 260, 55, 23);

        makeSelectLabel.setText("Please make a selection!");
        getContentPane().add(makeSelectLabel);
        makeSelectLabel.setBounds(120, 290, 170, 30);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void nextButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nextButtonActionPerformed
        /**
         * Allows the user to select which actions to perform or lists to view using 
         * radio buttons.
         */
        if(addJobRB.isSelected()){
            addJobOKButton.setVisible(false);
            invalidColorLabel.setVisible(false);
            invalidTypeLabel.setVisible(false);
            invalidSizeLabel.setVisible(false);
            invalidNumberPagesLabel.setVisible(false);
            invalidNumberCopiesLabel.setVisible(false);
            invalidBindingLabel.setVisible(false);
            addJobButton.setVisible(true);
            backButtonAJ.setVisible(true);
            addJobFrame.setVisible(true);
        }
        else if(closeJobRB.isSelected()){
            closeJobVerifyLabel.setVisible(false);
            closeJobOKButton.setVisible(false);
            closeJobFrame.setVisible(true);
        }
        else if(jobListRB.isSelected()){
            String[] jobList = paperShop.createJobList();
            for(int ndx = 0; ndx<paperShop.getOccupancy(); ndx++){
                jobListArea.append(jobList[ndx]+"\n");
            }
            jobListFrame.setVisible(true);
        }
        else if(changeBindingRB.isSelected()){
            invalidBindingCBLabel.setVisible(false);
            changeBindingOKButton.setVisible(false);
            changeBindingVerifyLabel.setVisible(false);
            invalidBindingLabel.setVisible(false);
            changeBindingButton.setVisible(true);
            backButtonCB.setVisible(true);
            changeBindingFrame.setVisible(true);
        }
        else if(observeIncomeRB.isSelected()){
            double overallIncome = paperShop.getOverallIncome();
            overallIncomeArea.append(overallIncome+"\n");
            observeIncomeFrame.setVisible(true);  
        }
        else{
            makeSelectLabel.setVisible(true);
        }
        
        if(!makeSelectLabel.isVisible()){
            this.setVisible(false);
        }
    }//GEN-LAST:event_nextButtonActionPerformed

    private void addJobButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addJobButtonActionPerformed
        /**
         * Takes several parameters from the user, checks to make sure all inputs
         * are valid, creates the job, and adds the job to the job list.
         */
        boolean flag = true;
        String color = colorField.getText();
        if(!color.equalsIgnoreCase("Full") && !color.equalsIgnoreCase("P1") && !color.equalsIgnoreCase("P2") && !color.equalsIgnoreCase("P3")){
            invalidColorLabel.setVisible(true);
            addJobVerifyLabel.setText("invalid data");
            addJobVerifyLabel.setVisible(true);
            flag = false;
        }
        else{
            color = colorField.getText();
        }
        
        String type = typeField.getText();
        if(!type.equalsIgnoreCase("Matte") && !type.equalsIgnoreCase("Glossy") && !type.equalsIgnoreCase("Luster")){
            invalidTypeLabel.setVisible(true);
            addJobVerifyLabel.setText("invalid data");
            addJobVerifyLabel.setVisible(true);
            flag = false;
        }
        else{
            type = typeField.getText();
        }
        
        String size = sizeField.getText();
        if(!size.equalsIgnoreCase("A4") && !size.equalsIgnoreCase("Letter")){
            invalidSizeLabel.setVisible(true);
            addJobVerifyLabel.setText("invalid data");
            addJobVerifyLabel.setVisible(true);
            flag = false;
        }
        else{
            size = sizeField.getText();
        }
        
        String name = nameField.getText();
        if(name.equalsIgnoreCase("")){
            addJobVerifyLabel.setText("invalid data");
            addJobVerifyLabel.setVisible(true);
            flag = false;
        }
        String numberPagesS = numberPagesField.getText();
        if (numberPagesS.equalsIgnoreCase("")){
            invalidNumberPagesLabel.setVisible(true);
            addJobVerifyLabel.setText("invalid data");
            addJobVerifyLabel.setVisible(true);
        }
        else{
             Integer numberPages = Integer.valueOf(numberPagesField.getText());
             if(numberPages <= 0){
                invalidNumberPagesLabel.setVisible(true);
                addJobVerifyLabel.setText("invalid data");
                addJobVerifyLabel.setVisible(true);
                flag = false;
         }
       
        
        String numberCopiesS = numberCopiesField.getText();
        if(numberCopiesS.equalsIgnoreCase("")){
            invalidNumberCopiesLabel.setVisible(true);
            addJobVerifyLabel.setText("invalid data");
            addJobVerifyLabel.setVisible(true);
            }
        else{
             Integer numberCopies = Integer.valueOf(numberCopiesField.getText());
             if(numberCopies <= 0){
                invalidNumberCopiesLabel.setVisible(true);
                addJobVerifyLabel.setText("invalid data");
                addJobVerifyLabel.setVisible(true);
                flag = false;
        }
    
        
        String binding = bindingField.getText();
        if(!binding.equalsIgnoreCase("Spiral") && !binding.equalsIgnoreCase("Glue") && !binding.equalsIgnoreCase("None")){
            invalidBindingLabel.setVisible(true);
            addJobVerifyLabel.setText("invalid data");
            addJobVerifyLabel.setVisible(true);
            flag = false; 
        }
        else{
            binding = bindingField.getText();
        }
        
        if(flag){
            Integer job = paperShop.addJob(color, type, size, name, numberPages, numberCopies, binding);
            if(job < paperShop.getCapacity()){
                addJobOKButton.setVisible(false);
                addJobOKButton.setVisible(true);
                addJobVerifyLabel.setText(name + "has job" + job);
            }
        }
        addJobVerifyLabel.setVisible(true);
        }
        }
    }//GEN-LAST:event_addJobButtonActionPerformed

    private void addJobOKButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addJobOKButtonActionPerformed
        /**
         * Clears all the text fields and verify label and closes the add job frame
         * after the add job action is complete.
         */
        colorField.setText(null);
        typeField.setText(null);
        sizeField.setText(null);
        nameField.setText(null);
        numberPagesField.setText(null);
        numberCopiesField.setText(null);
        bindingField.setText(null);
        addJobFrame.setVisible(false);
    }//GEN-LAST:event_addJobOKButtonActionPerformed

    private void backButtonAJActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backButtonAJActionPerformed
        /**
         * Clears all the text fields and verify label and closes the add job frame.
         */
        colorField.setText(null);
        typeField.setText(null);
        sizeField.setText(null);
        nameField.setText(null);
        numberPagesField.setText(null);
        numberCopiesField.setText(null);
        bindingField.setText(null);
        addJobFrame.setVisible(false);
        this.setVisible(true);
    }//GEN-LAST:event_backButtonAJActionPerformed

    private void closeJobButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_closeJobButtonActionPerformed
        /**
         * Checks the name of an open job, closes it, removes it from the job list,
         * presents the charges and adds it to the overall income.
         */
        String name = nameCJField.getText();
        if(name.equalsIgnoreCase("")){
            addJobVerifyLabel.setText("invalid data");
            addJobVerifyLabel.setVisible(true);
        }
        String verify = paperShop.closeOrder(name);
        
        closeJobVerifyLabel.setText(verify);
        closeJobVerifyLabel.setVisible(true);
        closeJobOKButton.setVisible(true);
    }//GEN-LAST:event_closeJobButtonActionPerformed

    private void closeJobOKButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_closeJobOKButtonActionPerformed
        /**
         * Clears the name text field and verify label and closes the close job frame
         * after the close job action is complete.
         */
        nameCJField.setText(null);
        closeJobVerifyLabel.setText(null);
        closeJobVerifyLabel.setVisible(false);
        closeJobFrame.setVisible(false);
    }//GEN-LAST:event_closeJobOKButtonActionPerformed

    private void backButtonCJActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backButtonCJActionPerformed
        /**
         * Clears the name text field and verify label and closes the close job frame.
         */
        nameCJField.setText(null);
        closeJobVerifyLabel.setText(null);
        closeJobVerifyLabel.setVisible(false);
        closeJobFrame.setVisible(false);
        this.setVisible(true);
    }//GEN-LAST:event_backButtonCJActionPerformed

    private void jobListOKButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jobListOKButtonActionPerformed
        /**
         * Clears the job list text area and closes the job list frame.
         */
        jobListArea.setText(null);
        jobListFrame.setVisible(false);
    }//GEN-LAST:event_jobListOKButtonActionPerformed

    private void changeBindingButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_changeBindingButtonActionPerformed
        /**
         * Checks the name from and open job and makes binding changes according to
         * the users input and the job changes according to the binding change.
         */
        String name = nameCBField.getText();
        if(name.equalsIgnoreCase("")){
            addJobVerifyLabel.setText("invalid data");
            addJobVerifyLabel.setVisible(true);
        }
        String bindingChanges = bindingChangesField.getText();
        
        if(!bindingChanges.equalsIgnoreCase("Spiral") && !bindingChanges.equalsIgnoreCase("Glue") && !bindingChanges.equalsIgnoreCase("None")){
            invalidBindingCBLabel.setVisible(true);
            changeBindingVerifyLabel.setText("invalid data");
            changeBindingVerifyLabel.setVisible(true);
        }
        else{
            String newBinding = paperShop.changeBinding(name, bindingChanges);
            changeBindingVerifyLabel.setText(newBinding);
            changeBindingOKButton.setVisible(true);
        }
        changeBindingVerifyLabel.setVisible(true);
    }//GEN-LAST:event_changeBindingButtonActionPerformed

    private void changeBindingOKButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_changeBindingOKButtonActionPerformed
        /**
         * Clears the text fields and verify label, and closes the frame 
         * after the change binding action is complete.
         */
        nameCBField.setText(null);
        bindingChangesField.setText(null);
        changeBindingVerifyLabel.setVisible(false);
        changeBindingFrame.setVisible(false);
    }//GEN-LAST:event_changeBindingOKButtonActionPerformed

    private void backButtonCBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backButtonCBActionPerformed
        /**
         * Clears all of the text fields and verify label and closes the change binding frame
         */
        nameCBField.setText(null);
        bindingChangesField.setText(null);
        changeBindingVerifyLabel.setVisible(false);
        changeBindingFrame.setVisible(false);
        this.setVisible(true);
    }//GEN-LAST:event_backButtonCBActionPerformed

    private void observeIncomeOKButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_observeIncomeOKButtonActionPerformed
        /**
         * Clears the overall income text area and closes the observe income frame
         */
        overallIncomeArea.setText(null);
        observeIncomeFrame.setVisible(false);
    }//GEN-LAST:event_observeIncomeOKButtonActionPerformed
    /**
     * Declares the treasurer class, keeps the frames, not including the main frame,
     * invisible, sets the welcome message, and sets the columns and rows for the text areas.
     */
    public void initDisplay(){
        paperShop = new Treasurer(3);
        welcomeLabel.setText("Welcome to the Paper Shop");
        addJobFrame.setVisible(false);
        closeJobFrame.setVisible(false);
        jobListFrame.setVisible(false);
        changeBindingFrame.setVisible(false);
        observeIncomeFrame.setVisible(false);
        jobListArea.setColumns(1);
        jobListArea.setRows(paperShop.getCapacity());
        overallIncomeArea.setColumns(1);
        overallIncomeArea.setRows(1);
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(PaperShopGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(PaperShopGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(PaperShopGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(PaperShopGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new PaperShopGUI().setVisible(true);
            }
        });
    }
    Treasurer paperShop;
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup RBGroup;
    private javax.swing.JButton addJobButton;
    private javax.swing.JFrame addJobFrame;
    private javax.swing.JButton addJobOKButton;
    private javax.swing.JRadioButton addJobRB;
    private javax.swing.JTextField addJobVerifyLabel;
    private javax.swing.JButton backButtonAJ;
    private javax.swing.JButton backButtonCB;
    private javax.swing.JButton backButtonCJ;
    private javax.swing.JTextField bindingChangesField;
    private javax.swing.JLabel bindingChangesLabel;
    private javax.swing.JTextField bindingField;
    private javax.swing.JLabel bindingLabel;
    private javax.swing.JButton changeBindingButton;
    private javax.swing.JFrame changeBindingFrame;
    private javax.swing.JButton changeBindingOKButton;
    private javax.swing.JRadioButton changeBindingRB;
    private javax.swing.JTextField changeBindingVerifyLabel;
    private javax.swing.JButton closeJobButton;
    private javax.swing.JFrame closeJobFrame;
    private javax.swing.JButton closeJobOKButton;
    private javax.swing.JRadioButton closeJobRB;
    private javax.swing.JTextField closeJobVerifyLabel;
    private javax.swing.JTextField colorField;
    private javax.swing.JLabel colorLabel;
    private javax.swing.JLabel invalidBindingCBLabel;
    private javax.swing.JLabel invalidBindingLabel;
    private javax.swing.JLabel invalidColorLabel;
    private javax.swing.JLabel invalidNumberCopiesLabel;
    private javax.swing.JLabel invalidNumberPagesLabel;
    private javax.swing.JLabel invalidSizeLabel;
    private javax.swing.JLabel invalidTypeLabel;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextArea jobListArea;
    private javax.swing.JFrame jobListFrame;
    private javax.swing.JButton jobListOKButton;
    private javax.swing.JRadioButton jobListRB;
    private javax.swing.JLabel jobListTopLabel;
    private javax.swing.JLabel makeSelectLabel;
    private javax.swing.JTextField nameCBField;
    private javax.swing.JLabel nameCBLabel;
    private javax.swing.JTextField nameCJField;
    private javax.swing.JLabel nameCJLabel;
    private javax.swing.JTextField nameField;
    private javax.swing.JLabel nameLabel;
    private javax.swing.JButton nextButton;
    private javax.swing.JTextField numberCopiesField;
    private javax.swing.JLabel numberCopiesLabel;
    private javax.swing.JTextField numberPagesField;
    private javax.swing.JLabel numberPagesLabel;
    private javax.swing.JFrame observeIncomeFrame;
    private javax.swing.JButton observeIncomeOKButton;
    private javax.swing.JRadioButton observeIncomeRB;
    private javax.swing.JLabel observeIncomeTopLabel;
    private javax.swing.JTextArea overallIncomeArea;
    private javax.swing.JTextField sizeField;
    private javax.swing.JLabel sizeLabel;
    private javax.swing.JTextField typeField;
    private javax.swing.JLabel typeLabel;
    private javax.swing.JLabel welcomeLabel;
    // End of variables declaration//GEN-END:variables
}
